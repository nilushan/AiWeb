---
import Feature from '@/components/ui/Feature.astro';

interface SectionItem {
  title?: string;
  description?: string;
  icon?: string;
  image?: string;
  link?: string;
  linkText?: string;
  metadata?: string;
}

interface Section {
  sectionType: string;
  heading?: string;
  subheading?: string;
  items?: SectionItem[];
}

interface Props {
  section: Section;
  className?: string;
}

const { section, className = '' } = Astro.props;
const { sectionType, heading, subheading, items = [] } = section;

// Helper to parse JSON metadata
const parseMetadata = (metadata?: string) => {
  if (!metadata) return {};
  try {
    return JSON.parse(metadata);
  } catch {
    return {};
  }
};
---

{sectionType === 'features' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {(heading || subheading) && (
        <div class="text-center mb-16">
          {heading && <h2 class="text-4xl md:text-5xl font-bold mb-4">{heading}</h2>}
          {subheading && (
            <p class="text-xl text-base-content/70 max-w-2xl mx-auto">{subheading}</p>
          )}
        </div>
      )}
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <Feature
              icon={item.icon || ''}
              title={item.title || ''}
              description={item.description || ''}
              iconColor={meta.iconColor}
            />
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'values' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {heading && <h2 class="text-4xl font-bold mb-12 text-center">{heading}</h2>}
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
        {items.map((item) => (
          <div class="card bg-base-100 shadow-xl">
            <div class="card-body items-center text-center">
              <div class="text-5xl mb-4">{item.icon}</div>
              <h3 class="card-title text-xl mb-2">{item.title}</h3>
              <p class="text-base-content/70">{item.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
)}

{sectionType === 'team' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {heading && <h2 class="text-4xl font-bold mb-12 text-center">{heading}</h2>}
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-5xl mx-auto">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <div class="card bg-base-100 shadow-xl card-hover">
              <div class="card-body items-center text-center">
                <div class="text-7xl mb-4">{item.icon}</div>
                <h3 class="card-title text-2xl">{item.title}</h3>
                <p class="text-primary font-semibold">{meta.role}</p>
                <p class="text-base-content/70 mt-2">{item.description}</p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'cta' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      <div class="card bg-gradient-to-br from-primary to-secondary text-primary-content shadow-2xl">
        <div class="card-body items-center text-center p-12">
          {heading && <h2 class="card-title text-4xl md:text-5xl font-bold mb-4">{heading}</h2>}
          {subheading && (
            <p class="text-xl mb-8 max-w-2xl opacity-90">{subheading}</p>
          )}
          <div class="flex flex-col sm:flex-row gap-4">
            {items.map((item, index) => (
              <a
                href={item.link}
                class={`btn btn-lg ${index === 0 ? 'btn-accent' : 'btn-ghost bg-white/20 hover:bg-white/30'}`}
              >
                {item.linkText || item.title}
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>
)}

{sectionType === 'stats' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      <div class="stats stats-vertical lg:stats-horizontal shadow-xl w-full">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <div class="stat">
              <div class="stat-figure text-primary">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="inline-block w-8 h-8 stroke-current">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
              <div class="stat-title">{item.title}</div>
              <div class="stat-value text-primary">{meta.value}</div>
              <div class="stat-desc">{item.description}</div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'contact-methods' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-16">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <a
              href={item.link}
              class="card bg-base-100 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-1"
            >
              <div class="card-body items-center text-center">
                <div class="text-5xl mb-3">{item.icon}</div>
                <h3 class="card-title text-xl">{item.title}</h3>
                <p class="text-sm text-base-content/70 mb-2">{item.description}</p>
                <p class="text-sm font-semibold text-primary">{meta.contact}</p>
              </div>
            </a>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'offices' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {(heading || subheading) && (
        <div class="text-center mb-12">
          {heading && <h2 class="text-4xl font-bold mb-4">{heading}</h2>}
          {subheading && <p class="text-xl text-base-content/70">{subheading}</p>}
        </div>
      )}
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-5xl mx-auto">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <div class="card bg-base-100 shadow-lg">
              <div class="card-body text-center">
                <div class="text-6xl mb-4">{item.icon}</div>
                <h3 class="card-title text-2xl justify-center mb-2">{item.title}</h3>
                <p class="text-base-content/70">{item.description}</p>
                <p class="text-base-content/70">{meta.postal}</p>
                <p class="font-semibold">{meta.country}</p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'faqs' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {(heading || subheading) && (
        <div class="text-center mb-12">
          {heading && <h2 class="text-4xl font-bold mb-4">{heading}</h2>}
          {subheading && <p class="text-xl text-base-content/70">{subheading}</p>}
        </div>
      )}
      <div class="max-w-4xl mx-auto space-y-4">
        {items.map((item, index) => (
          <div class="collapse collapse-plus bg-base-100 shadow-lg">
            <input type="radio" name={`faq-${heading}`} checked={index === 0} />
            <div class="collapse-title text-xl font-medium">
              {item.title}
            </div>
            <div class="collapse-content">
              <p class="text-base-content/70">{item.description}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
)}

{sectionType === 'pricing' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {heading && (
        <div class="text-center mb-12">
          <h2 class="text-4xl font-bold mb-4">{heading}</h2>
        </div>
      )}
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-7xl mx-auto">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          const planFeatures = meta.features || [];
          const highlighted = meta.highlighted || false;
          return (
            <div class={`card shadow-xl ${highlighted ? 'bg-gradient-to-br from-primary/10 to-secondary/10 border-2 border-primary scale-105 relative' : 'bg-base-100'}`}>
              {highlighted && (
                <div class="badge badge-primary absolute -top-3 left-1/2 -translate-x-1/2">
                  Most Popular
                </div>
              )}
              <div class="card-body p-8">
                <h3 class="card-title text-3xl mb-2">{item.title}</h3>
                <div class="mb-4">
                  <span class="text-5xl font-bold">{meta.price}</span>
                  {meta.period && <span class="text-base-content/60">{meta.period}</span>}
                </div>
                <p class="text-base-content/70 mb-6">{item.description}</p>
                <div class="divider"></div>
                <ul class="space-y-3 mb-8">
                  {planFeatures.map((feature: string) => (
                    <li class="flex items-start gap-2">
                      <span class="text-success text-lg mt-0.5">âœ“</span>
                      <span>{feature}</span>
                    </li>
                  ))}
                </ul>
                <a
                  href={meta.ctaLink}
                  class={`btn btn-block ${highlighted ? 'btn-primary' : 'btn-outline'}`}
                >
                  {meta.cta}
                </a>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'addons' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {(heading || subheading) && (
        <div class="text-center mb-12">
          {heading && <h2 class="text-4xl font-bold mb-4">{heading}</h2>}
          {subheading && <p class="text-xl text-base-content/70 max-w-3xl mx-auto">{subheading}</p>}
        </div>
      )}
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-6xl mx-auto">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <div class="card bg-base-100 shadow-lg hover:shadow-xl transition-shadow">
              <div class="card-body text-center">
                <div class="text-4xl mb-3">{item.icon}</div>
                <h3 class="card-title text-lg justify-center">{item.title}</h3>
                <p class="text-2xl font-bold text-primary my-2">{meta.price}</p>
                <p class="text-sm text-base-content/70">{item.description}</p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

{sectionType === 'tech-stack' && (
  <section class={`section-padding ${className}`}>
    <div class="container-custom">
      {(heading || subheading) && (
        <div class="text-center mb-16">
          {heading && <h2 class="text-4xl font-bold mb-4">{heading}</h2>}
          {subheading && <p class="text-xl text-base-content/70 max-w-3xl mx-auto">{subheading}</p>}
        </div>
      )}
      <div class="grid grid-cols-2 md:grid-cols-4 gap-6 max-w-5xl mx-auto">
        {items.map((item) => {
          const meta = parseMetadata(item.metadata);
          return (
            <div class="card bg-base-100 shadow-lg hover:shadow-xl transition-shadow">
              <div class="card-body p-6 text-center">
                <h4 class="font-bold text-lg">{item.title}</h4>
                <p class="text-xs text-primary">{meta.version}</p>
                <p class="text-xs text-base-content/60 mt-2">{item.description}</p>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  </section>
)}

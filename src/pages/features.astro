---
import { getEntry } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Hero from '@/components/ui/Hero.astro';
import PageSection from '@/components/PageSection.astro';

// Fetch page content from collection
const page = await getEntry('pages', 'features');

if (!page) {
  return Astro.redirect('/404');
}

const { title, description, hero, sections = [] } = page.data;
---

<BaseLayout
  title={title.charAt(0).toUpperCase() + title.slice(1)}
  description={description}
>
  <!-- Hero -->
  {hero && (
    <Hero
      title={hero.title}
      subtitle={hero.subtitle}
    />
  )}

  <!-- Dynamic Sections -->
  {sections.map((section, index) => {
    // Core features section should have detailed cards with benefits
    if (section.sectionType === 'features' && section.heading === 'Core Features') {
      return (
        <section class="section-padding">
          <div class="container-custom">
            <div class="text-center mb-16">
              <h2 class="text-4xl font-bold mb-4">{section.heading}</h2>
              {section.subheading && (
                <p class="text-xl text-base-content/70 max-w-3xl mx-auto">
                  {section.subheading}
                </p>
              )}
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {section.items?.map((item: any) => {
                const meta = JSON.parse(item.metadata || '{}');
                const benefits = meta.benefits || [];
                return (
                  <div class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
                    <div class="card-body">
                      <div class="text-5xl mb-4">{item.icon}</div>
                      <h3 class="card-title text-2xl mb-3">{item.title}</h3>
                      <p class="text-base-content/70 mb-4">{item.description}</p>
                      <div class="divider"></div>
                      <ul class="space-y-2">
                        {benefits.map((benefit: string) => (
                          <li class="flex items-start gap-2">
                            <span class="text-success mt-1">âœ“</span>
                            <span class="text-sm">{benefit}</span>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </section>
      );
    }

    // Regular sections
    const className = index % 2 === 1 ? 'bg-base-200' : '';
    return (
      <PageSection
        section={section}
        className={className}
      />
    );
  })}
</BaseLayout>

name: Deploy to Production

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  GCP_REGION: 'us-central1'
  CLOUD_RUN_SERVICE: 'keystatic-cms'

jobs:
  build-and-deploy-web:
    name: Build & Deploy Static Site to Firebase
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        working-directory: apps/web
        run: npm run build
        env:
          NODE_ENV: production
          SITE_URL: ${{ vars.SITE_URL }}
          BASE_PATH: ${{ vars.BASE_PATH || '/' }}
          PUBLIC_CMS_API_URL: ${{ vars.CMS_API_URL }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ vars.FIREBASE_PROJECT_ID }}

  build-and-deploy-cms:
    name: Build & Deploy CMS to Cloud Run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        working-directory: apps/cms
        run: |
          IMAGE_NAME="gcr.io/${{ vars.GCP_PROJECT_ID }}/${{ env.CLOUD_RUN_SERVICE }}"
          docker build -t $IMAGE_NAME:${{ github.sha }} -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.CLOUD_RUN_SERVICE }} \
            --image gcr.io/${{ vars.GCP_PROJECT_ID }}/${{ env.CLOUD_RUN_SERVICE }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "NODE_ENV=production,GITHUB_REPO_OWNER=${{ vars.GITHUB_REPO_OWNER }},GITHUB_REPO_NAME=${{ vars.GITHUB_REPO_NAME }}" \
            --set-secrets "GITHUB_TOKEN=github-token:latest" \
            --min-instances 0 \
            --max-instances 10 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 300

      - name: Output deployed URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.CLOUD_RUN_SERVICE }} \
            --region ${{ env.GCP_REGION }} \
            --format 'value(status.url)')
          echo "CMS deployed to: $SERVICE_URL"
          echo "CMS_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
